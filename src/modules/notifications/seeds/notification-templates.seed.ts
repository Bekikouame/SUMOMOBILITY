import { PrismaService } from 'src/prisma/prisma.service';
import { NotificationType, NotificationChannel } from '@prisma/client';

export async function seedNotificationTemplates(prisma: PrismaService) {
  console.log(' Cr√©ation des templates de notification...');

  const templates = [
    // RIDE_REQUEST - Push
    {
      type: NotificationType.RIDE_REQUEST,
      channel: NotificationChannel.PUSH,
      language: 'fr',
      title: ' Nouvelle course disponible',
      body: 'Course de {{pickup}} vers {{destination}} - Client: {{clientName}}',
      variables: ['pickup', 'destination', 'clientName'],
      priority: 1
    },
    
    // RIDE_ACCEPTED - Push
    {
      type: NotificationType.RIDE_ACCEPTED,
      channel: NotificationChannel.PUSH,
      language: 'fr',
      title: 'Course accept√©e',
      body: '{{driverName}} arrive dans {{estimatedArrival}} ({{vehiclePlate}})',
      variables: ['driverName', 'vehiclePlate', 'estimatedArrival'],
      priority: 1
    },

    // RIDE_ACCEPTED - Email
    {
      type: NotificationType.RIDE_ACCEPTED,
      channel: NotificationChannel.EMAIL,
      language: 'fr',
      title: 'Course accept√©e',
      subject: 'Votre chauffeur arrive bient√¥t',
      body: `Bonjour,

Bonne nouvelle ! Votre course a √©t√© accept√©e par {{driverName}}.

 V√©hicule: {{vehiclePlate}}
 Arriv√©e estim√©e: {{estimatedArrival}}

Vous pouvez suivre l'avancement depuis l'application.

Bonne route !
L'√©quipe VTC`,
      variables: ['driverName', 'vehiclePlate', 'estimatedArrival'],
      priority: 2
    },

    // RIDE_COMPLETED - Push
    {
      type: NotificationType.RIDE_COMPLETED,
      channel: NotificationChannel.PUSH,
      language: 'fr',
      title: ' Course termin√©e',
      body: 'Trajet termin√© - {{distance}}km en {{duration}} - {{totalFare}} FCFA',
      variables: ['distance', 'duration', 'totalFare'],
      priority: 1
    },

    // DOCUMENT_EXPIRED - Push
    {
      type: NotificationType.DOCUMENT_EXPIRED,
      channel: NotificationChannel.PUSH,
      language: 'fr',
      title: ' Document expir√©',
      body: 'Votre {{docType}} a expir√© le {{expirationDate}}. Renouvelez-le rapidement.',
      variables: ['docType', 'expirationDate'],
      priority: 1
    },

    // DOCUMENT_EXPIRED - Email
    {
      type: NotificationType.DOCUMENT_EXPIRED,
      channel: NotificationChannel.EMAIL,
      language: 'fr',
      title: 'Document expir√©',
      subject: 'URGENT: Renouvellement de document requis',
      body: `Bonjour,

 ATTENTION: Votre document {{docType}} a expir√© le {{expirationDate}}.

Pour continuer √† recevoir des courses, vous devez imp√©rativement renouveler ce document.

 Connectez-vous sur {{renewalUrl}}

En cas de question, contactez notre support.

Cordialement,
L'√©quipe VTC`,
      variables: ['docType', 'expirationDate', 'renewalUrl'],
      priority: 1
    },

    // DRIVER_APPROVED - Push
    {
      type: NotificationType.DRIVER_APPROVED,
      channel: NotificationChannel.PUSH,
      language: 'fr',
      title: 'üéâ F√©licitations {{firstName}} !',
      body: 'Votre candidature chauffeur a √©t√© approuv√©e. Bienvenue dans l\'√©quipe !',
      variables: ['firstName'],
      priority: 1
    },

    // PAYMENT_SUCCESS - Push
    {
      type: NotificationType.PAYMENT_SUCCESS,
      channel: NotificationChannel.PUSH,
      language: 'fr',
      title: '‚úÖ Paiement confirm√©',
      body: 'Paiement de {{amount}} FCFA effectu√© avec succ√®s',
      variables: ['amount'],
      priority: 2
    },

    // RESERVATION_REMINDER - Push
    {
      type: NotificationType.RESERVATION_REMINDER,
      channel: NotificationChannel.PUSH,
      language: 'fr',
      title: '‚è∞ R√©servation dans 1h',
      body: 'Votre course {{pickup}} ‚Üí {{destination}} √† {{scheduledTime}}',
      variables: ['pickup', 'destination', 'scheduledTime'],
      priority: 1
    }
  ];

  for (const template of templates) {
    await prisma.notificationTemplate.upsert({
      where: {
        type_channel_language: {
          type: template.type,
          channel: template.channel,
          language: template.language
        }
      },
      update: {},
      create: template
    });
  }

  console.log(` ${templates.length} templates de notification cr√©√©s`);
}
